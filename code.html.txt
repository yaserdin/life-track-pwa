<!DOCTYPE html>
<html lang="ar">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Life Track</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
  <style>
    html, body {
      margin: 0;
      padding: 0;
      height: 100%;
      font-family: 'Segoe UI', sans-serif;
      background: linear-gradient(135deg, #1d1d1d, #470000);
      color: white;
    }

    #connectPage, #mapPage {
      display: none;
      height: 100vh;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }

    #connectPage {
      display: flex;
      background: linear-gradient(135deg, #1a1a1a, #620000);
      animation: gradient 10s ease infinite;
    }

    @keyframes gradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    button {
      background: white;
      color: #8b1c1c;
      padding: 14px 28px;
      border: none;
      border-radius: 10px;
      font-size: 18px;
      cursor: pointer;
      transition: 0.3s;
    }

    button:hover {
      background-color: #e0e0e0;
    }

    #mapPage {
      display: none;
      flex-direction: column;
    }

    #map {
      height: 100%;
      width: 100%;
    }
  </style>
</head>
<body>

<div id="connectPage">
  <h1>🎗️ Life Track</h1>
  <p>اضغط للاتصال بالسوار الذكي</p>
  <button onclick="connectToDevice()">🔗 اتصال بالسوار</button>
</div>

<div id="mapPage">
  <div id="map"></div>
</div>

<script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
<script>
  let map;

  async function connectToDevice() {
    try {
      const device = await navigator.bluetooth.requestDevice({
        acceptAllDevices: true,
        optionalServices: ['battery_service'] // ممكن تغييره حسب نوع السوار
      });

      const server = await device.gatt.connect();
      console.log('✅ Connected to:', device.name);

      // وهمياً نستخدم بيانات تجريبية (لأننا لا نعرف الـUUID الحقيقي)
      const fakeData = {
        id: '001',
        bpm: 78,
        lat: 32.5519,
        lng: 35.8498
      };

      showMap(fakeData);

    } catch (error) {
      alert("فشل الاتصال: " + error);
    }
  }

  function showMap({ id, bpm, lat, lng }) {
    document.getElementById("connectPage").style.display = "none";
    document.getElementById("mapPage").style.display = "flex";

    map = L.map('map').setView([lat, lng], 13);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    const color = bpm >= 60 && bpm <= 100 ? 'green' : (bpm >= 20 ? 'orange' : 'red');
    const status = bpm >= 60 && bpm <= 100 ? 'سليم' : (bpm >= 20 ? 'خطر' : 'متوفي');

    const icon = L.divIcon({
      html: `<div style="width:24px;height:24px;border-radius:50%;background:${color};border:2px solid white;"></div>`
    });

    L.marker([lat, lng], { icon })
      .addTo(map)
      .bindPopup(`
        <div style="background:${color};padding:10px;border-radius:10px;color:white;">
          <h3>المستخدم - ${id}</h3>
          <p>❤️ BPM: ${bpm}</p>
          <p>🩺 الحالة: ${status}</p>
          <p>🕒 ${new Date().toLocaleTimeString()}</p>
        </div>`)
      .openPopup();
  }
</script>

</body>
</html>
